{
	"info": {
		"_postman_id": "c0ea7763-6f97-4217-9c60-d929e33c6240",
		"name": "Pruebas API TiendaRopa",
		"description": "Colecci√≥n para medir tiempos, errores y c√≥digos HTTP en /api/TiendaRopa/inventario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46507136"
	},
	"item": [
		{
			"name": "GET Inventario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let duration = pm.response.responseTime;",
							"",
							"",
							"let stats = pm.environment.get(\"responseTimes\");",
							"if (!stats) stats = [];",
							"else stats = JSON.parse(stats);",
							"",
							"stats.push(duration);",
							"pm.environment.set(\"responseTimes\", JSON.stringify(stats));",
							"",
							"let codes = pm.environment.get(\"statusCodes\");",
							"if (!codes) codes = {};",
							"else codes = JSON.parse(codes);",
							"",
							"let code = pm.response.code;",
							"codes[code] = (codes[code] || 0) + 1;",
							"pm.environment.set(\"statusCodes\", JSON.stringify(codes));",
							"",
							"let errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"if (pm.response.code < 200 || pm.response.code > 299) {",
							"    errores++;",
							"}",
							"pm.environment.set(\"errorCount\", errores);",
							"",
							"",
							"let tiempos = JSON.parse(pm.environment.get(\"responseTimes\") || \"[]\");",
							"let codigos = JSON.parse(pm.environment.get(\"statusCodes\") || \"{}\");",
							" errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"",
							"if (tiempos.length > 0) {",
							"    let suma = tiempos.reduce((a, b) => a + b, 0);",
							"    let promedio = suma / tiempos.length;",
							"    let max = Math.max(...tiempos);",
							"    let min = Math.min(...tiempos);",
							"    let tasaErrores = (errores / tiempos.length) * 100;",
							"",
							"    console.log(\"üìä RESUMEN DE PRUEBAS:\");",
							"    console.log(\"----------------------------\");",
							"    console.log(`Total de solicitudes: ${tiempos.length}`);",
							"    console.log(`Tiempo promedio: ${promedio.toFixed(2)} ms`);",
							"    console.log(`Tiempo m√°ximo: ${max} ms`);",
							"    console.log(`Tiempo m√≠nimo: ${min} ms`);",
							"    console.log(`‚ùå Tasa de errores: ${tasaErrores.toFixed(2)} %`);",
							"    console.log(\"C√≥digos de estado:\");",
							"    Object.keys(codigos).forEach(c => {",
							"        console.log(`  ${c}: ${codigos[c]} veces`);",
							"    });",
							"} else {",
							"    console.log(\"‚ùóNo hay datos de pruebas disponibles.\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44364/api/TiendaRopa/inventario",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44364",
					"path": [
						"api",
						"TiendaRopa",
						"inventario"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET inventario_id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let duration = pm.response.responseTime;\r",
							"\r",
							"let stats = pm.environment.get(\"responseTimes\");\r",
							"if (!stats) stats = [];\r",
							"else stats = JSON.parse(stats);\r",
							"\r",
							"stats.push(duration);\r",
							"pm.environment.set(\"responseTimes\", JSON.stringify(stats));\r",
							"\r",
							"let codes = pm.environment.get(\"statusCodes\");\r",
							"if (!codes) codes = {};\r",
							"else codes = JSON.parse(codes);\r",
							"\r",
							"let code = pm.response.code;\r",
							"codes[code] = (codes[code] || 0) + 1;\r",
							"pm.environment.set(\"statusCodes\", JSON.stringify(codes));\r",
							"\r",
							"let errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");\r",
							"if (pm.response.code < 200 || pm.response.code > 299) {\r",
							"    errores++;\r",
							"}\r",
							"pm.environment.set(\"errorCount\", errores);\r",
							"\r",
							"let tiempos = JSON.parse(pm.environment.get(\"responseTimes\") || \"[]\");\r",
							"let codigos = JSON.parse(pm.environment.get(\"statusCodes\") || \"{}\");\r",
							" errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");\r",
							"\r",
							"if (tiempos.length > 0) {\r",
							"    let suma = tiempos.reduce((a, b) => a + b, 0);\r",
							"    let promedio = suma / tiempos.length;\r",
							"    let max = Math.max(...tiempos);\r",
							"    let min = Math.min(...tiempos);\r",
							"    let tasaErrores = (errores / tiempos.length) * 100;\r",
							"\r",
							"    console.log(\"üìä RESUMEN DE PRUEBAS:\");\r",
							"    console.log(\"----------------------------\");\r",
							"    console.log(`Total de solicitudes: ${tiempos.length}`);\r",
							"    console.log(`Tiempo promedio: ${promedio.toFixed(2)} ms`);\r",
							"    console.log(`Tiempo m√°ximo: ${max} ms`);\r",
							"    console.log(`Tiempo m√≠nimo: ${min} ms`);\r",
							"    console.log(`‚ùå Tasa de errores: ${tasaErrores.toFixed(2)} %`);\r",
							"    console.log(\"C√≥digos de estado:\");\r",
							"    Object.keys(codigos).forEach(c => {\r",
							"        console.log(`  ${c}: ${codigos[c]} veces`);\r",
							"    });\r",
							"} else {\r",
							"    console.log(\"‚ùóNo hay datos de pruebas disponibles.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44364/api/TiendaRopa/inventario/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44364",
					"path": [
						"api",
						"TiendaRopa",
						"inventario",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Producto",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let duration = pm.response.responseTime;\r",
							"\r",
							"let stats = pm.environment.get(\"responseTimes\");\r",
							"if (!stats) stats = [];\r",
							"else stats = JSON.parse(stats);\r",
							"\r",
							"stats.push(duration);\r",
							"pm.environment.set(\"responseTimes\", JSON.stringify(stats));\r",
							"\r",
							"let codes = pm.environment.get(\"statusCodes\");\r",
							"if (!codes) codes = {};\r",
							"else codes = JSON.parse(codes);\r",
							"\r",
							"let code = pm.response.code;\r",
							"codes[code] = (codes[code] || 0) + 1;\r",
							"pm.environment.set(\"statusCodes\", JSON.stringify(codes));\r",
							"\r",
							"let errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");\r",
							"if (pm.response.code < 200 || pm.response.code > 299) {\r",
							"    errores++;\r",
							"}\r",
							"pm.environment.set(\"errorCount\", errores);\r",
							"\r",
							"\r",
							"let tiempos = JSON.parse(pm.environment.get(\"responseTimes\") || \"[]\");\r",
							"let codigos = JSON.parse(pm.environment.get(\"statusCodes\") || \"{}\");\r",
							" errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");\r",
							"\r",
							"if (tiempos.length > 0) {\r",
							"    let suma = tiempos.reduce((a, b) => a + b, 0);\r",
							"    let promedio = suma / tiempos.length;\r",
							"    let max = Math.max(...tiempos);\r",
							"    let min = Math.min(...tiempos);\r",
							"    let tasaErrores = (errores / tiempos.length) * 100;\r",
							"\r",
							"    console.log(\"üìä RESUMEN DE PRUEBAS:\");\r",
							"    console.log(\"----------------------------\");\r",
							"    console.log(`Total de solicitudes: ${tiempos.length}`);\r",
							"    console.log(`Tiempo promedio: ${promedio.toFixed(2)} ms`);\r",
							"    console.log(`Tiempo m√°ximo: ${max} ms`);\r",
							"    console.log(`Tiempo m√≠nimo: ${min} ms`);\r",
							"    console.log(`‚ùå Tasa de errores: ${tasaErrores.toFixed(2)} %`);\r",
							"    console.log(\"C√≥digos de estado:\");\r",
							"    Object.keys(codigos).forEach(c => {\r",
							"        console.log(`  ${c}: ${codigos[c]} veces`);\r",
							"    });\r",
							"} else {\r",
							"    console.log(\"‚ùóNo hay datos de pruebas disponibles.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44364/api/TiendaRopa/producto",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44364",
					"path": [
						"api",
						"TiendaRopa",
						"producto"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let duration = pm.response.responseTime;",
							"",
							"let stats = pm.environment.get(\"responseTimes\");",
							"if (!stats) stats = [];",
							"else stats = JSON.parse(stats);",
							"",
							"stats.push(duration);",
							"pm.environment.set(\"responseTimes\", JSON.stringify(stats));",
							"",
							"let codes = pm.environment.get(\"statusCodes\");",
							"if (!codes) codes = {};",
							"else codes = JSON.parse(codes);",
							"",
							"let code = pm.response.code;",
							"codes[code] = (codes[code] || 0) + 1;",
							"pm.environment.set(\"statusCodes\", JSON.stringify(codes));",
							"",
							"let errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"if (pm.response.code < 200 || pm.response.code > 299) {",
							"    errores++;",
							"}",
							"pm.environment.set(\"errorCount\", errores);",
							"",
							"",
							"let tiempos = JSON.parse(pm.environment.get(\"responseTimes\") || \"[]\");",
							"let codigos = JSON.parse(pm.environment.get(\"statusCodes\") || \"{}\");",
							" errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"",
							"if (tiempos.length > 0) {",
							"    let suma = tiempos.reduce((a, b) => a + b, 0);",
							"    let promedio = suma / tiempos.length;",
							"    let max = Math.max(...tiempos);",
							"    let min = Math.min(...tiempos);",
							"    let tasaErrores = (errores / tiempos.length) * 100;",
							"",
							"    console.log(\"üìä RESUMEN DE PRUEBAS:\");",
							"    console.log(\"----------------------------\");",
							"    console.log(`Total de solicitudes: ${tiempos.length}`);",
							"    console.log(`Tiempo promedio: ${promedio.toFixed(2)} ms`);",
							"    console.log(`Tiempo m√°ximo: ${max} ms`);",
							"    console.log(`Tiempo m√≠nimo: ${min} ms`);",
							"    console.log(`‚ùå Tasa de errores: ${tasaErrores.toFixed(2)} %`);",
							"    console.log(\"C√≥digos de estado:\");",
							"    Object.keys(codigos).forEach(c => {",
							"        console.log(`  ${c}: ${codigos[c]} veces`);",
							"    });",
							"} else {",
							"    console.log(\"‚ùóNo hay datos de pruebas disponibles.\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nombre\": \"pruebas\",\n  \"precio\": 250,\n  \"descripcion\": \"test postman\",\n  \"cantidadStock\": 25\n}"
				},
				"url": {
					"raw": "https://localhost:44364/api/TiendaRopa/producto",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44364",
					"path": [
						"api",
						"TiendaRopa",
						"producto"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Inventario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let duration = pm.response.responseTime;",
							"",
							"let stats = pm.environment.get(\"responseTimes\");",
							"if (!stats) stats = [];",
							"else stats = JSON.parse(stats);",
							"",
							"stats.push(duration);",
							"pm.environment.set(\"responseTimes\", JSON.stringify(stats));",
							"",
							"let codes = pm.environment.get(\"statusCodes\");",
							"if (!codes) codes = {};",
							"else codes = JSON.parse(codes);",
							"",
							"let code = pm.response.code;",
							"codes[code] = (codes[code] || 0) + 1;",
							"pm.environment.set(\"statusCodes\", JSON.stringify(codes));",
							"",
							"let errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"if (pm.response.code < 200 || pm.response.code > 299) {",
							"    errores++;",
							"}",
							"pm.environment.set(\"errorCount\", errores);",
							"",
							"",
							"",
							"let tiempos = JSON.parse(pm.environment.get(\"responseTimes\") || \"[]\");",
							"let codigos = JSON.parse(pm.environment.get(\"statusCodes\") || \"{}\");",
							" errores = parseInt(pm.environment.get(\"errorCount\") || \"0\");",
							"",
							"if (tiempos.length > 0) {",
							"    let suma = tiempos.reduce((a, b) => a + b, 0);",
							"    let promedio = suma / tiempos.length;",
							"    let max = Math.max(...tiempos);",
							"    let min = Math.min(...tiempos);",
							"    let tasaErrores = (errores / tiempos.length) * 100;",
							"",
							"    console.log(\"üìä RESUMEN DE PRUEBAS:\");",
							"    console.log(\"----------------------------\");",
							"    console.log(`Total de solicitudes: ${tiempos.length}`);",
							"    console.log(`Tiempo promedio: ${promedio.toFixed(2)} ms`);",
							"    console.log(`Tiempo m√°ximo: ${max} ms`);",
							"    console.log(`Tiempo m√≠nimo: ${min} ms`);",
							"    console.log(`‚ùå Tasa de errores: ${tasaErrores.toFixed(2)} %`);",
							"    console.log(\"C√≥digos de estado:\");",
							"    Object.keys(codigos).forEach(c => {",
							"        console.log(`  ${c}: ${codigos[c]} veces`);",
							"    });",
							"} else {",
							"    console.log(\"‚ùóNo hay datos de pruebas disponibles.\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"startTime\", new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \n  \"fecha\": \"2025-07-06\"\n}"
				},
				"url": {
					"raw": "https://localhost:44364/api/TiendaRopa/inventario",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44364",
					"path": [
						"api",
						"TiendaRopa",
						"inventario"
					]
				}
			},
			"response": []
		}
	]
}
